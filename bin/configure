#!/usr/bin/env bash
set -e # Exit immediately if a command exits with a non-zero status.

# This script should support running in bash or zsh

echo "Starting TypedAI configuration script..."
echo "---------------------------------------------------------------------"

# Function to update or add a variable in an .env file
# This function is duplicated in configure_parts/gcp_services_setup for robustness,
# but the one in the main configure script is the primary one used here.
update_env_variable() {
    local file_path="$1"
    local var_name="$2"
    local new_value="$3"
    local temp_file
    mkdir -p "$(dirname "$file_path")"
    if [ ! -f "$file_path" ]; then touch "$file_path"; echo "Created empty file at $file_path"; fi
    # Escape forward slashes and ampersands for sed, and handle newlines
    local escaped_new_value=$(echo "$new_value" | sed -e 's/[\/&]/\\&/g' -e 's/$/\\n/' -e '$s/\\n$//')
    # Escape characters that have special meaning in regex for the variable name
    local escaped_var_name=$(echo "$var_name" | sed -e 's/[]\/$*.^|[]/\\&/g')
    temp_file=$(mktemp)
    if grep -q "^${escaped_var_name}=" "$file_path"; then
        sed "s|^${escaped_var_name}=.*|$var_name=$escaped_new_value|" "$file_path" > "$temp_file" && mv "$temp_file" "$file_path"
        echo "Updated $var_name in $file_path."
    else
        echo "$var_name=$new_value" >> "$file_path"
        echo "Added $var_name to $file_path."
    fi
    rm -f "$temp_file"
}

# --- Python Setup ---
echo ""
echo "--- Stage 1: Python Environment Setup ---"
source ./bin/configure_parts/python_setup || exit 1
echo "Python environment setup complete."
echo "---------------------------------------------------------------------"

# --- Node.js Setup ---
echo ""
echo "--- Node.js Environment Setup (using fnm) ---"
source ./bin/configure_parts/nodejs_setup || exit 1
echo "Node.js environment setup complete."
echo "---------------------------------------------------------------------"

# --- Ripgrep Setup ---
echo ""
echo "--- Ripgrep (rg) Setup ---"
source ./bin/configure_parts/ripgrep_setup || exit 1
echo "Ripgrep setup complete."
echo "---------------------------------------------------------------------"

# --- Initial Environment File Setup ---
echo ""
echo "--- Initial Environment File Setup ---"
# Ensure local.env and test.env exist before any part tries to read them.
# They are created from the example file.
if [ ! -f ./variables/local.env.example ]; then
    echo "❌ Error: Template file ./variables/local.env.example not found."
    echo "   This file is required to create initial configuration files."
    exit 1
fi

if [[ ! -f ./variables/local.env ]]; then
    echo "Creating local.env by copying from local.env.example"
    cp ./variables/local.env.example ./variables/local.env
fi
if [[ ! -f ./variables/test.env ]]; then
    echo "Creating test.env by copying from local.env.example"
    cp ./variables/local.env.example ./variables/test.env
fi
echo "Environment files checked/created."
echo "---------------------------------------------------------------------"


# --- Google Cloud Platform Services Configuration ---
echo ""
echo "--- Google Cloud Platform (GCP) Services Configuration ---"
# This script will ask the user if they want to set up GCP and handle the full flow.
# It exports GCP_SETUP_SUCCESS and CURRENT_GCLOUD_PROJECT for use in later steps.
source ./bin/configure_parts/gcp_services_setup || exit 1
echo "GCP services check complete."
echo "---------------------------------------------------------------------"

# --- Application Setup (local.env, Angular, CLI paths) ---
echo ""
echo "--- Application Configuration and Frontend ---"
# This part is expected to create ./variables/local.env if it doesn't exist.
source ./bin/configure_parts/app_setup || exit 1
echo "Application configuration and frontend setup complete."
echo "---------------------------------------------------------------------"


# --- Database Setup ---
#echo ""
#echo "--- Database Setup ---"
#source ./bin/configure_parts/db_setup || exit 1
#echo "---------------------------------------------------------------------"


echo ""
echo "--- Configuration Complete ---"
echo "All selected setup steps have been processed."
echo "Please review any specific instructions or warnings displayed above."
echo ""
echo "✅ Configuration complete."
echo "To apply the environment changes, you MUST open a new terminal window or run 'source ~/.zshrc' (or ~/.bashrc)."
echo ""
echo "Next steps:"
echo "  - Backend a: 'npm run start:local'"
echo "  - Frontend: 'cd frontend && npm run start:local'"
echo "done"
exit 0
